!function(t){function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var e={};n.m=t,n.c=e,n.i=function(t){return t},n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},n.p="",n(n.s="./client/src/bundles/bundle.js")}({"./client/src/bundles/CheckForUpdates.js":function(t,n){window.jQuery.entwine("ss",function(t){t("#checkForUpdates").entwine({PollTimeout:null,onclick:function(){this.setLoading()},onmatch:function(){this.getButton(!0).length&&this.setLoading()},setLoading:function(){var n=this.getButton().data("message");t(".ss-gridfield-buttonrow").first().prepend('<p class="alert alert-info">'+n+"</p>"),this.poll()},poll:function(){var n=this;t.ajax({url:n.getButton().data("check"),async:!0,success:function(t){n.clearLoading(JSON.parse(t))}})},getButton:function(t){var n="button";return t&&(n+=":disabled"),this.children(n).first()},clearLoading:function(n){if(!0!==n)return void this.closest("fieldset.ss-gridfield").reload();clearTimeout(this.getPollTimeout()),this.setPollTimeout(setTimeout(function(){t("#checkForUpdates").poll()},5e3))}})})},"./client/src/bundles/GridfieldDropdownFilter.js":function(t,n){window.jQuery.entwine("ss",function(t){t(".gridfield-dropdown-filter select").entwine({onchange:function(){this.parent().find(".action").click()}})})},"./client/src/bundles/bundle.js":function(t,n,e){e("./client/src/bundles/CheckForUpdates.js"),e("./client/src/bundles/GridfieldDropdownFilter.js")}});